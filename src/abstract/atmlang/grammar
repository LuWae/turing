S          -> id Stateargs { Statebody } S2
S2         -> eps | id Stateargs { Statebody } S2

Stateargs  -> eps | ( Stateargs2 )
Stateargs2 -> id Stateargs3 | $ id Stateargs3
Stateargs3 -> eps | , Stateargs2

Statebody  -> eps | [ Statebody2
Statebody2 -> def ] Actions Nextstate | Sym Symrange Symargs ] Actions Nextstate Statebody
Symargs    -> eps | , Sym Symrange Symargs
Symrange   -> eps | - Sym
Sym        -> sym | $ id
Actions    -> eps | > Actions | < Actions | = Sym Actions
Nextstate  -> eps | Call
Call       -> accept | reject | id Callargs
Callargs   -> eps | ( Callargs2 )
Callargs2  -> Sym Callargs3 | Call Callargs3
Callargs3  -> eps | , Callargs2



S          -> {id}
S2         -> {eof} | {id}

Stateargs  -> {'{'} | {'('}
Stateargs2 -> {id} | {'$'}
Stateargs3 -> {')'} | {','}

Statebody  -> {'}'} | {'['}
Statebody2 -> {'def'} | {sym, '$'}
Symargs    -> {']'} | {','}
Symrange   -> {']', ','} | {'-'}
Sym        -> {sym} | {'$'}
Actions    -> {'}', '[', accept, reject, id} | {'>'} | {'<'} | {=}
Nextstate  -> {'}', '['} | {accept, reject, id}
Call       -> {accept} | {reject} | {id}
Callargs   -> {')', ',', '}', '['} | {'('}
Callargs2  -> {sym, '$'} | {accept, reject, id}
Callargs3  -> {')'} | {','}
