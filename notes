Turing machine to add 1
10011011 -> 10011100

  _   0   1
s _La 0Rs 1Rs    find end of word
a 1NE 1NE 0La    change 1 to 0 and first 0 or _ to 1

assign numbers to symbols, numbers to states, numbers to movement:
_ -> 0
0 -> 1
1 -> 2

s -> 0
a -> 1
E -> 0xFFFF (noted F)

L -> 0
N -> 1
R -> 2

  0   1   2
0 001 120 220
1 21F 21F 101

table as struct:
state symbol command
0     0      001
0     1      120
0     2      220
1     0      21F
1     1      21F
1     2      101

in memory (little endian):
0x00
0x00
0x01
0x00
0x01
0x02
0x00
0x00
0x02
0x02
0x00
0x00
0x02
0x01
0xFF
0xFF
0x02
0x01
0xFF
0xFF
0x01
0x00
0x01
0x00



state:
 - command for each input symbol:
    - char to write, new state
 - (accepting bool) handle this later

machine:
 - contains alphabet

constraints:
 - 256 symbols, 0 is blank
 - state 0xFFFF is garbage state; automatically terminate negative if reached
 - start state is state 0
 
map symbols for faster array access
map states for faster array access
