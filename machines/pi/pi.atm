main {
  >>
  ='A' <
  ='1' <
  ='$' <
  ='n' <
  ='$' <
  =' ' <
  ='#' <
  ='1' <
  ='1' <
  ='0' <
  ='#' <
  ='1' <
  ='0' <
  ='0' <
  ='#' <
  ='%'
  > singleterm(end)
}

end { }
                

/------------------------------/
advance a single division and add/subtract it to the total.
start: left of left $
 - if % here (all terms done): newterm + recursion
 - otherwise: search % and commence calculation
/------------------------------/

singleterm(E) {
  ['%'] =' ' fl('_').newterm.fr('$').r.singleterm_changepn(
    r.r.r.subst.rfr('a').resubst.singleterm.E,
    r.r.r.substbig.rfr('a').resubst.singleterm.E
  )

  fl('%', p(' ', rfr(' ', p('%').l(step(
    fr4('a', 'b', 'A', 'B', repl(calc1.fl('$').lfl('$').l.singleterm(E))),
    fr4('a', 'b', 'A', 'B', repl(resubst.fl('$').lfl('$').l.singleterm(E)))
  )))))
}

singleterm_changepn(P, N) {
  ['p'] ='n' N
  ['n'] ='p' P
}

calc1(E) {
  ['A'] ='1' < calc1_decr.E
  ['B'] ='0' E
  ['a'] ='1' E
  ['b'] ='0' < calc1_incr.E
}

calc1_decr(E) {
  ['0'] ='1' < calc1_decr.E
  ['1'] ='0' E
}

calc1_incr(E) {
  ['0'] ='1' E
  ['1'] ='0' < calc1_incr.E
}

subst(E) {
  ['0'] ='a' E
  ['1'] ='b' E
}

substbig(E) {
  ['0'] ='A' E
  ['1'] ='B' E
}

resubst(E) {
  ['a', 'A'] ='0' E
  ['b', 'B'] ='1' E
}


/------------------------------/
  V
$1A1
  V
$1Ab
/------------------------------/

repl(E) {
 ['a', 'b'] > repl_frompos(E)
 ['A', 'B'] > repl_fromneg(E)
}

repl_frompos(E) {
 ['0', '_'] ='A' < E
 ['1'] ='B' < E
}

repl_fromneg(E) {
 ['0', '_'] ='a' < E
 ['1'] ='b' < E
}



/------------------------------/
               V
________________#001#011#
   V
___%#0001#0101# #001#011#
/------------------------------/

newterm(E) {
  =' ' < ='#' >> fr(' ').l.l.newterm_rec.E
}

newterm_rec(E) {
  ['0'] ='a' fl('_').p('0').fr2('a', 'b').resubst.l.newterm_rec.E
  ['1'] ='b' fl('_').p('1').fr2('a', 'b').resubst.l.newterm_rec.E
  fl('_').p('0').l.p('#').rfr('#').l.l.add_bit.fl('#').r.r.newterm_prune.E
}

newterm_prune(E) {
  ['0'] < ='#' < ='_' > rfr('#').l.newterm_numerator.E
  rfr('#').l.newterm_numerator.E
}

newterm_numerator(E) {
  ['0', '1'] subst.fl('_').p('0').fr2('a', 'b').resubst.l.newterm_numerator.E
  < ='1' fl('_').p('#').l.p('%').E
}

add_bit(E) {
  ['0'] ='1' E
  ['1'] ='0' < add_bit.E
}

                        V
__ #0010#0101# #001#011#%$p$011a



/------------------------------/
one divisor calculation.
/------------------------------/

step(T, F) {
  lfl('#', shl(rfr('#', cmpge(sub(T), F))))
}

shl(E) {
  lfl('#', r(r(shl1(E))))
}

shl1(E) {
  ['0'] < ='0' >> shl1(E)
  ['1'] < ='1' >> shl1(E)
  < ='0' > E
}


/------------------------------/
test left >= right
/------------------------------/

cmpge(T, F) {
  lfl('#', r(subst(l(lfl('#', r(cmpge_entry(T, F)))))))
}

cmpge_entry(T, F) {
  ['0'] ='a' rfr2('a', 'b', cmpge_0(T, F))
  ['1'] ='b' rfr2('a', 'b', cmpge_1(T, F))
  rfr('#', T)
}

cmpge_redo(T, F) {
  ['0'] ='a' < fl2('a', 'b', resubst(r(cmpge_entry(T, F))))
  ['1'] ='b' < fl2('a', 'b', resubst(r(cmpge_entry(T, F))))
  fl2('a', 'b', resubst(fr('#', rfr('#', T))))
}

cmpge_leave(E)
  fl2('a', 'b', resubst(fr('#', rfr('#', E))))
}

cmpge_next(T, F) {
  r(subst(l(cmpge_redo(T, F))))
}

cmpge_0(T, F) {
  ['a'] ='0' > cmpge_redo(T, F)
  ['b'] ='1' cmpge_leave(F)
}

cmpge_1(T, F) {
  ['a'] ='0' cmpge_leave(T)
  ['b'] ='1' > cmpge_redo(T, F)
}



/------------------------------/
left -= right
/------------------------------/

sub(E) {
  lfl('#', l(subst(r(rfr('#', l(sub_entry(E)))))))
}

sub_entry(E) {
  ['0'] ='a' lfl2('a', 'b', sub_0(E))
  ['1'] ='b' lfl2('a', 'b', sub_1(E))
}

sub_redo(E) {
  rfr2('a', 'b', resubst(l(sub_entry(E))))
}

sub_0(E) {
  resubst(l(sub_0_1(E)))
}

sub_0_1(E) {
  ['0', '1'] subst(sub_redo(E))
  fr2('a', 'b', resubst(fr('#', E)))
}

sub_1(E) {
  ['a'] ='1' < sub_1_ppg1(E)
  ['b'] ='0' < sub1_1(E)
}

sub1_1(E) {
  ['0', '1'] subst(sub_redo(E))
  rfr2('a', 'b', resubst(fr('#', E)))
}

sub_1_ppg1(E) {
  ['0'] ='b' < sub_1_ppg2(E)
  ['1'] ='a' sub_redo(E)
  rfr2('a', 'b', resubst(fr('#', E))
}

sub_1_ppg2(E) {
  ['0'] ='1' < sub_1_ppg2(E)
  ['1'] ='0' fr2('a', 'b', sub_redo(E))
  rfr2('a', 'b', sub_redo(E))
}
