The calculation of pi is based on the Leibniz formula:
pi = 4 (1 - 1/3 + 1/5 - 1/7 + ...).
It converges very slowly, but is pretty easy to understand and implement. The machine never terminates.
We ignore the factor 4. This means we just get the binary digits of pi shifted by 2.

We want to calculate infinitely many decimal places of infinitely many rational numbers.
To do that, we use a 2D->1D mapping. In the first iteration, we calculate the first decimal place of 1/3. In the second iteration, we calculate the first decimal place of 1/5 and the second decimal place of 1/3. And so on to infinity.

Calculating the digits of the rationals is done by shifting and subtracting, just like dividing on paper. We get less and less significant digits, starting with 2^-1 and working to 2^-infinity.

The following shows python code for generating the digits, which is equivalent to what our turing machine is doing.
def binary_digits(denominator):
    numerator = 1
    while (True):
        numerator <<= 1
        if numerator >= denominator:
            numerator -= denominator
            yield 1
        else:
            yield 0

Here are the first 10 digits of the first 4 rationals each.
frac | binary digits (starting at 2^-1)
1/3  | 0101010101...
1/5  | 0011001100...
1/7  | 0010010010...
1/9  | 0001110001...
...

Here are the step numbers for when each digit is read.
      frac 1/3 1/5 1/7 1/9 ...
digits
(2^k)
-1           1   2   3   4
-2           2   3   4   5
-3           3   4   5   6
-4           4   5   6   7
...

numerator/denominator pairs are generated on the left side of the tape. The larger a denominator, the further left on the tape it will be.
The actual digits of pi will appear on the right (tape position [1..]).

The machine keeps track to which digit of pi it needs to add or subtract the calculated digit by either writing 'a' (add to 0), 'b' (add to 1), 'A' (sub from 0), 'B' (sub from 1) at the correct position. The next rational to be used is marked by '%' to the left of it. Additionally, the machine keeps track if the first rational of the current step is to be added ('$p$') or subtracted ('$n$'). Consider step 3: We need to subtract the first digit of 1/7, add the second digit of 1/5, and subtract the third digit of 1/3.
