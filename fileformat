Turing

### explicit reject after actions!

0 l before
0 r before
0 l after
0 r after
0 var
0 varlr
1 - print
0 - print

### can make smaller by using 1111 as var
### extreme: 1110 varl, 1111 varr

0 l before #### 1111=var
0 r before
0 l after
0 r after
0 varlr
1 - print
0 - print
0 - print

0 l before #### 1110=varl 1111=varr
0 r before
0 l after
0 r after
1 - print
0 - print
0 - print
0 - print

### printv <size> <0..7> <8..15> <...>

### use var 7-bit to create unrestrained machines

0 size[0] 1100=movevs1 1101=movevs2 1110=movevs3 1111=movev((movevs4))
0 size[1]
0 size[2]
0 size[3]
0 lr
1 - move
0 - move
0 - move

### movev <0..6> <7..13> <...>
### movev <size> <0..7> <8..15>

2XXXX movel(X)
2f movevl
3XXXX mover(X)
3f movevr

0 - next[0]
0 - next[1]
0 - next[2]
0 - next[3]
0 - next[4]
0 - next[5]
X - next[6]  
X - next[7]
1 - statechange

1111000=statechangevs1
1111001=statechangevs2
1111010=statechangevs3
1111011=statechangev((statechangevs4))
1111100=stay
1111101=acc
1111110=rej
1111111=fail (when a char is not found)

### TODO think of better system; maybe use other opcodes too
### TODO resolve conflict with char

X
X
X
X
0000 = newstate
((0001 = newstate_deflt))
0001 = char
0010 = charrrange
0011 = chardeflt
1XXX = charv 1111=charvbig
1 - char
0 - char
0 - char
0 - char
